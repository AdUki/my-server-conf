server {
	listen 80 default_server;
	listen [::]:80 default_server;

	root /var/www/html;

	index index.html index.htm;
	server_name _;

	location / {
		try_files $uri $uri/ =404;
	}
}


server {
	listen [::]:443 ssl ipv6only=on; # managed by Certbot
	listen 443 ssl; # managed by Certbot

	root /var/www/html;

	index index.html index.htm;
	server_name mikuda.duckdns.org; # managed by Certbot

	location / {
		try_files $uri $uri/ =404;
	}

	ssl_certificate /etc/letsencrypt/live/mikuda.duckdns.org/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/mikuda.duckdns.org/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
	listen 80 ;
	listen [::]:80 ;

	server_name mikuda.duckdns.org;

	if ($host = mikuda.duckdns.org) {
		return 301 https://$host$request_uri;
	} # managed by Certbot


	return 404; # managed by Certbot
}

server {
	listen 8443 ssl;

	server_name mikuda.duckdns.org; # Managed by certobot

	# allow large file uploads
	client_max_body_size 50000M;

	# Set headers
	proxy_set_header Host              $host;
	proxy_set_header X-Real-IP         $remote_addr;
	proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto $scheme;

	# enable websockets: http://nginx.org/en/docs/http/websocket.html
	proxy_http_version 1.1;
	proxy_set_header   Upgrade    $http_upgrade;
	proxy_set_header   Connection "upgrade";
	proxy_redirect     off;

	# set timeout
	proxy_read_timeout 600s;
	proxy_send_timeout 600s;
	send_timeout       600s;

	location / {
		proxy_pass http://127.0.0.1:2283;
	}

	ssl_certificate /etc/letsencrypt/live/mikuda.duckdns.org/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/mikuda.duckdns.org/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
